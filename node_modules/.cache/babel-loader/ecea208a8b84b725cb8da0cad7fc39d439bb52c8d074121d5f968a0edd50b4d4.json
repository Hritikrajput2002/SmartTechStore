{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91935\\\\OneDrive\\\\Desktop\\\\WEB DEVLOPMENT\\\\react\\\\E-commerce-website\\\\src\\\\components\\\\noteState.js\",\n  _s = $RefreshSig$();\nimport noteContext from \"./noteContext\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  //alert box \n  const [alert, setalert] = useState(null);\n  const callalert = (type, msg) => {\n    setalert({\n      type: type,\n      msg: msg\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n\n  //show products\n  const showProducts = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: node.name,\n          email: node.email,\n          password: node.password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) return callalert(\"Error\", data.error || \"Something went wrong\");\n      callalert(\"Success\", \"Registration successful\");\n      return true;\n    } catch (err) {\n      callalert(\"Error\", \"Server error, please try again later\");\n      return false;\n    }\n  };\n\n  // API call for register\n  const userSignup = async node => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: node.name,\n          email: node.email,\n          password: node.password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) return callalert(\"Error\", data.error || \"Something went wrong\");\n      callalert(\"Success\", \"Registration successful\");\n      return true;\n    } catch (err) {\n      callalert(\"Error\", \"Server error, please try again later\");\n      return false;\n    }\n  };\n\n  //api call for login\n\n  const userLogin = async node => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: node.email,\n          password: node.password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) return props.callalert(\"Error\", data.error || \"Something went wrong\");\n      localStorage.setItem('token', data.token);\n      callalert(\"Success\", \"Login successful\");\n      return true;\n    } catch (error) {\n      callalert(\"Error\", \"Server error, please try again later\");\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      userSignup,\n      userLogin,\n      alert,\n      callalert\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"EHoUvmZKyQ7XSjP+rkgWgMUnBw8=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["noteContext","React","useState","jsxDEV","_jsxDEV","NoteState","props","_s","alert","setalert","callalert","type","msg","setTimeout","showProducts","response","fetch","method","headers","body","JSON","stringify","name","node","email","password","data","json","ok","error","err","userSignup","userLogin","localStorage","setItem","token","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91935/OneDrive/Desktop/WEB DEVLOPMENT/react/E-commerce-website/src/components/noteState.js"],"sourcesContent":["import noteContext from \"./noteContext\";\r\nimport React ,{useState} from 'react'\r\n\r\n\r\n\r\nconst NoteState = (props) => {\r\n      \r\n\r\n     //alert box \r\n      const[alert,setalert]=useState(null);\r\n      const callalert=(type,msg)=>{\r\n          setalert({type:type,\r\n                  msg:msg\r\n                  \r\n          })\r\n\r\n          setTimeout(() => {\r\n            setalert(null)\r\n          },1500);\r\n      }\r\n\r\n\r\n    //show products\r\n    const showProducts=async()=>{\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/auth/signup', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: node.name,\r\n                    email: node.email,\r\n                    password: node.password\r\n                })\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (!response.ok)      return callalert(\"Error\", data.error || \"Something went wrong\");\r\n            callalert(\"Success\", \"Registration successful\");\r\n            return true;\r\n            \r\n        } catch (err) {\r\n              callalert(\"Error\", \"Server error, please try again later\");\r\n              return false\r\n        }\r\n\r\n    } \r\n\r\n\r\n\r\n\r\n      // API call for register\r\n      const userSignup=async(node)=>{\r\n\r\n          try {\r\n              const response = await fetch('http://localhost:5000/api/auth/signup', {\r\n                  method: 'POST',\r\n                  headers: {\r\n                      'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify({\r\n                      name: node.name,\r\n                      email: node.email,\r\n                      password: node.password\r\n                  })\r\n              });\r\n\r\n              const data = await response.json();\r\n              if (!response.ok)      return callalert(\"Error\", data.error || \"Something went wrong\");\r\n              callalert(\"Success\", \"Registration successful\");\r\n              return true;\r\n              \r\n          } catch (err) {\r\n                callalert(\"Error\", \"Server error, please try again later\");\r\n                return false\r\n          }\r\n\r\n      } \r\n\r\n\r\n      //api call for login\r\n  \r\n      const userLogin=async(node)=>{\r\n        try {\r\n              const response = await fetch('http://localhost:5000/api/auth/login', {\r\n                  method: 'POST',\r\n                  headers: {\r\n                      'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify({\r\n                      email: node.email,\r\n                      password: node.password\r\n                  })\r\n              });\r\n      \r\n            const data = await response.json();  \r\n            if (!response.ok)     return props.callalert(\"Error\", data.error || \"Something went wrong\");\r\n\r\n              localStorage.setItem('token',data.token);\r\n              callalert(\"Success\", \"Login successful\");\r\n              return true\r\n          } catch (error) {\r\n              callalert(\"Error\", \"Server error, please try again later\");\r\n              return false;\r\n          }\r\n      }\r\n\r\n\r\n  return (\r\n    <noteContext.Provider value={{userSignup,userLogin,alert,callalert}}>\r\n            {props.children}\r\n    </noteContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NoteState\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}