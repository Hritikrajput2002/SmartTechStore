{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91935\\\\OneDrive\\\\Desktop\\\\WEB DEVLOPMENT\\\\react\\\\E-commerce-website\\\\src\\\\components\\\\setAvatar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Setavatar = () => {\n  _s();\n  const [avatars, setAvatars] = useState([]);\n  const [selectedimage, setimage] = useState('');\n  const navigate = useNavigate();\n  const fetchAvatars = async () => {\n    try {\n      const avatarUrls = [];\n      for (let i = 0; i < 5; i++) {\n        const randomId = Math.floor(Math.random() * 1000);\n        const avatarUrl = `https://api.multiavatar.com/${randomId}.png?apikey=m8tEFp9JIXCSJB`;\n        avatarUrls.push(avatarUrl);\n      }\n      setAvatars(avatarUrls);\n    } catch (error) {\n      console.error('Error fetching avatars:', error);\n    }\n  };\n  const selecthandle = avatarUrl => {\n    setimage(avatarUrl);\n  };\n  const submitavatar = async () => {\n    console.log(selectedimage);\n    const response = await fetch('http://localhost:5000/api/auth/setavatar', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        imageurl: selectedimage\n      })\n    });\n    navigate('/');\n  };\n  useEffect(() => {\n    fetchAvatars();\n  }, []); // Run fetchAvatars only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      style: {\n        height: \"30vh\",\n        paddingTop: \"20px\",\n        background: \"#162a61\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: 'center',\n            fontSize: \"20px\",\n            color: \"blue\",\n            marginBottom: \"40px\"\n          },\n          children: \"Select Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), avatars.length > 0 &&\n        /*#__PURE__*/\n        // Render only if avatars are fetched successfully\n        _jsxDEV(\"ul\", {\n          className: \"d-flex justify-content-center\",\n          children: avatars.map((avatarUrl, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              listStyleType: 'none',\n              display: 'inline-block'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: avatarUrl,\n              onClick: () => {\n                selecthandle(avatarUrl);\n              },\n              style: {\n                width: \"120px\",\n                margin: \"20px\",\n                borderRadius: \"50%\",\n                border: selectedimage === avatarUrl ? '10px solid blue' : null\n              },\n              alt: `Avatar ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n          //   \n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex  justify-content-center mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary ml-2\",\n            style: {\n              width: \"100px\"\n            },\n            onClick: submitavatar,\n            children: \"Set Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Setavatar, \"G5wZ1Ld4es6NFejQrueZkHNQVds=\", false, function () {\n  return [useNavigate];\n});\n_c = Setavatar;\nexport default Setavatar;\nvar _c;\n$RefreshReg$(_c, \"Setavatar\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Setavatar","_s","avatars","setAvatars","selectedimage","setimage","navigate","fetchAvatars","avatarUrls","i","randomId","Math","floor","random","avatarUrl","push","error","console","selecthandle","submitavatar","log","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","imageurl","children","className","style","height","paddingTop","background","textAlign","fontSize","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","listStyleType","display","src","onClick","width","margin","borderRadius","border","alt","type","_c","$RefreshReg$"],"sources":["C:/Users/91935/OneDrive/Desktop/WEB DEVLOPMENT/react/E-commerce-website/src/components/setAvatar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nconst Setavatar = () => {\r\n  const [avatars, setAvatars] = useState([]);\r\n  const [selectedimage,setimage]=useState('');\r\n  const navigate= useNavigate();\r\n\r\n  const fetchAvatars = async () => {\r\n    try {\r\n      const avatarUrls = [];\r\n      for (let i = 0; i < 5; i++) {\r\n        const randomId = Math.floor(Math.random() * 1000);\r\n        const avatarUrl= `https://api.multiavatar.com/${randomId}.png?apikey=m8tEFp9JIXCSJB`;\r\n        avatarUrls.push(avatarUrl);\r\n      }\r\n      setAvatars(avatarUrls);\r\n    } \r\n    catch (error) {\r\n      console.error('Error fetching avatars:', error);\r\n    }\r\n  };\r\n\r\n  const selecthandle=(avatarUrl)=>{\r\n            setimage(avatarUrl);\r\n          \r\n  }\r\n  const submitavatar=async()=>{\r\n    console.log(selectedimage)\r\n    const response=await fetch('http://localhost:5000/api/auth/setavatar',{\r\n      method:'POST',\r\n      headers:{\r\n         'Content-Type': 'application/json',\r\n         'token':localStorage.getItem('token')\r\n      },\r\n      body:JSON.stringify({\r\n          imageurl:selectedimage\r\n      })\r\n\r\n    })\r\n      navigate('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n  \r\n    fetchAvatars();\r\n  }, []); // Run fetchAvatars only once on component mount\r\n\r\n  return (\r\n    <>\r\n        <div className=\"\" style={{height:\"30vh\",paddingTop:\"20px\",background:\"#162a61\"}}>\r\n          \r\n          <div className=\"d-flex flex-column justify-content-center \">\r\n              <h1 style={{ textAlign: 'center',fontSize:\"20px\",color:\"blue\",marginBottom:\"40px\" }}>Select Avatar</h1>\r\n              {avatars.length > 0 && ( // Render only if avatars are fetched successfully\r\n                <ul className=\"d-flex justify-content-center\" >\r\n                  {avatars.map((avatarUrl, index) => (\r\n                    <li key={index} style={{listStyleType:'none',display:'inline-block'}}>\r\n                      <img src={avatarUrl}  onClick={()=>{selecthandle(avatarUrl)}}  style={{width:\"120px\",margin:\"20px\",borderRadius:\"50%\",border:selectedimage ===avatarUrl ?  '10px solid blue': null}}   alt={`Avatar ${index + 1}`} />\r\n                    </li>\r\n                            //   \r\n\r\n                  ))}\r\n                </ul>\r\n              )}\r\n              <div className=\"d-flex  justify-content-center mt-5\">\r\n                  <button  type=\"button\" className=\"btn btn-primary ml-2\" style={{width:\"100px\"}} onClick={submitavatar}>Set Avatar</button>\r\n              </div>\r\n\r\n          </div>\r\n                   \r\n\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setavatar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}